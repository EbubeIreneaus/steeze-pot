// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider   = "prisma-client-js"
  engineType = "data-proxy"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  src      String
  alt      String?
  products Product[]
}

model Product {
  id        Int       @id @default(autoincrement())
  name      String
  desc      String?
  price     Decimal  @db.Decimal(6,2)
  image     String?
  imageAlt  String?
  available Boolean   @default(false)
  category  String
  group     Category  @relation(fields: [category], references: [name])
  favorite  Favorite?
}

model User {
  id        Int        @id @default(autoincrement())
  firstname String
  lastname  String
  email     String     @unique
  phone     String
  psw       String
  createdAt DateTime   @default(now())
  address   Address?
  admin     Boolean    @default(false)
  favorite  Favorite[]
  order     Order[]
}

model Address {
  id      Int     @id @default(autoincrement())
  userId  Int?    @unique
  user    User?   @relation(fields: [userId], references: [id])
  state   String
  area    String
  bustop  String
  street  String
  address String
  Order   Order[]
}

model Favorite {
  id        Int     @id @default(autoincrement())
  productId Int     @unique
  userId    Int
  product   Product @relation(fields: [productId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@unique([productId, userId])
}

model Appointment {
  id       Int    @id @default(autoincrement())
  type     String
  fullname String
  email    String
  phone    String
  date     String
  time     String
  state    String
  area     String
  bustop   String
  address  String
}

model Order {
  id              Int       @id @default(autoincrement())
  userId          Int
  user            User      @relation(fields: [userId], references: [id])
  products        Json[]
  totalAmount     Decimal   @db.Decimal(6,2)
  createdAt       DateTime  @default(now())
  paid            Boolean   @default(false)
  delivered       Boolean   @default(false)
  deliveredAt     DateTime?
  deliveryAddress Address   @relation(fields: [addressId], references: [id])
  addressId       Int
}

model Message {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(60)
  email     String   @db.VarChar(60)
  message   String   @db.Text
  resolved  Boolean @default(false)
  createdAt DateTime @default(now())
}
